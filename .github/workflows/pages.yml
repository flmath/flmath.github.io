name: Deploy SvelteKit Site to GitHub Pages (with Deno)

on:
  push:
    branches: ["main"] # Trigger deployment on pushes to the main branch
  workflow_dispatch: # Allows manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.1.4

      - name: Install Dependencies
        # Use Deno to run npm install. Adjust if you use pnpm or yarn.
        run: deno run -A npm:npm install

      - name: Build SvelteKit Site
        # Use Deno to run npm run build.
        # Set the VITE_BASE_PATH environment variable for GitHub Pages sub-paths.
        run: deno run -A npm:npm run build
        env:
          VITE_BASE_PATH: /${{ github.event.repository.name }} # Set this to your repo name!

      - name: Create .nojekyll file
        # Prevents GitHub Pages from running built files through Jekyll
        run: touch build/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name of: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the 'build' directory (or whatever you set in svelte.config.js)
          path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This job runs only after the 'build' job succeeds
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4